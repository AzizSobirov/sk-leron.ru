---
interface Props {
  class?: string;
  id?: string;
  variant?: "primary" | "secondary" | "outline" | "link";
  href?: string;
}

const {
  class: className = "",
  id,
  variant = "primary",
  href,
  ...rest
} = Astro.props;

const variantClasses = {
  primary: "btn-primary",
  secondary: "btn-secondary",
  outline: "btn-outline",
  link: "btn-link",
};

const computedClass = ["btn", className, variantClasses[variant]]
  .filter(Boolean)
  .join(" ");

const Tag = href ? "a" : "button";
---

<Tag id={id} class={computedClass} href={href} {...rest}>
  <slot />
</Tag>

<style lang="scss" is:global>
  @use "scss/helpers" as *;

  .btn {
    color: initial;
    font-size: rem(18);
    text-transform: uppercase;
    white-space: nowrap;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition-ease);
    overflow: hidden;

    &-primary {
      position: relative;
      padding: rem(16) rem(30);
      color: #333;
      font-weight: 700;
      background: var(--primary);
      border-radius: 9999px;
      gap: rem(10);

      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
        width: rem(15);
        height: 100%;
        background: #fff;
        animation-delay: 0.05s;
        animation-timing-function: ease-in-out;
        transition: all 0.1s;
        animation-name: slideme;
        animation-duration: 2s;
        animation-iteration-count: infinite;
        transform: skew(-45deg);
      }

      @keyframes slideme {
        0% {
          left: -30px;
          margin-left: 0;
        }
        30% {
          left: 110%;
          margin-left: 80px;
        }
        100% {
          left: 110%;
          margin-left: 80px;
        }
      }

      .icon {
        transition: var(--transition-ease);
      }

      &:hover {
        background: var(--primary-light);
        animation-play-state: paused;

        .icon {
          transform: rotate(-45deg);
        }
      }
    }

    // &-secondary {
    //   height: rem(60);
    //   width: rem(264);
    //   color: #fff;
    //   background: var(--primary);
    //   border-radius: 9999px;
    //   gap: rem(14);

    //   svg {
    //     transition: var(--transition-ease);
    //   }

    //   &:hover {
    //     color: #fff;
    //     background: var(--secondary);

    //     svg {
    //       transform: translateX(rem(5));
    //     }
    //   }

    //   @include media("sm") {
    //     width: rem(240);
    //     height: rem(56);
    //     font-size: rem(16);
    //     gap: rem(20);
    //   }
    // }

    // &-outline {
    //   height: rem(56);
    //   width: rem(220);
    //   color: var(--primary);
    //   border: rem(1) solid var(--primary);
    //   border-radius: 9999px;

    //   &:hover {
    //     color: #fff;
    //     background: var(--primary);
    //   }
    // }
  }
</style>
